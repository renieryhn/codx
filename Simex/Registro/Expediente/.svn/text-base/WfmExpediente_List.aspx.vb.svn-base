Imports prjDatos
Public Class WfmExpedientes_List
    Inherits System.Web.UI.Page
    Dim cFunciones As New funciones
    Private sMensaje As String = ""
    Private Codigo As String = ""
    Dim Ok As Boolean
    Private sNombreBusqueda As String = "pExpediente_List"
    Private sNombreBorrado As String = "pExpediente_Delete"
    Private sNombreCargaTrabajo As String = "pCargaTrabajo_List"
    Private sNombreMantenimiento As String = "Mantenimiento de Expedientes"
    Private dtCargaTrabajo As DataTable
#Region "Eventos"
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        AddHandler Master.btnBuscar_Click, AddressOf btnBuscar_Click
        AddHandler Master.btnNuevo_Click, AddressOf btnNuevo_Click
        AddHandler Master.PreRender, AddressOf Page_PreRender
        AddHandler Master.btnExportar_Click, AddressOf btnExportar_Click
        sMensaje = Session("Mensaje")
        Master.Master.m_titulo = sNombreMantenimiento
        If sMensaje <> "" Then
            Mensaje(sMensaje)
        End If
    End Sub
    Protected Sub PageChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs) Handles GridView1.PageIndexChanging
        GridView1.PageIndex = e.NewPageIndex
        llenarGrid()
    End Sub
    Protected Sub SeguimientoExpediente(ByVal sender As Object, ByVal e As System.EventArgs) Handles GridView1.SelectedIndexChanged
        Codigo = GridView1.Rows(GridView1.SelectedIndex).Cells(3).Text
        Session("id") = Codigo
        Response.Redirect(linkSeguimiento.NavigateUrl)
    End Sub
    Private Sub Page_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.PreRender

        If Session("Empleado") = "" Then
            GridView1.Columns(0).Visible = Master.Master.Modificacion
        Else
            GridView1.Columns(0).Visible = 1
        End If
        GridView1.Columns(1).Visible = Master.Master.Modificacion
        GridView1.Columns(2).Visible = Master.Master.Borrado
        CargaTrabajo()
    End Sub
    Protected Sub btnExportar_Click(ByVal sender As Object, ByVal e As EventArgs)
        Master.Exportar(GridView1, dtParametrosExportar, "Consulta de Expedientes")
    End Sub
    Protected Sub btnImprimir_Click(ByVal sender As Object, ByVal e As EventArgs)
        Response.Redirect("~/Reportes/wfmReporteador.aspx")
    End Sub

    Protected Sub btnBuscar_Click(ByVal sender As Object, ByVal e As EventArgs)
        If tbxExpediente.Text = "" Then
            Session("SinRecibir") = ""
            Session("SinEnviar") = ""
            Session("EnviadoSinRecibir") = ""
            Session("Empleado") = ""
        End If
        llenarGrid()
    End Sub

    Protected Sub GridView1_RowDeleting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewDeleteEventArgs) Handles GridView1.RowDeleting
        Codigo = GridView1.Rows(e.RowIndex).Cells(3).Text
        Dim s As String = GridView1.Rows(e.RowIndex).ID
        Ok = cFunciones.Ejecutar(sNombreBorrado, dtParametros(Codigo), sMensaje)
        Mensaje(sMensaje)
        If Ok Then
            llenarGrid()
        End If
    End Sub
    Protected Sub btnNuevo_Click(ByVal sender As Object, ByVal e As EventArgs)
        Response.Redirect(linkNuevo.NavigateUrl)
    End Sub

    Private Sub GridView1_RowEditing(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewEditEventArgs) Handles GridView1.RowEditing
        Session("ID") = GridView1.Rows(e.NewEditIndex).Cells(3).Text
        Response.Redirect(linkModificar.NavigateUrl)
    End Sub
    Private Sub cboServicioFiltro_ComboChangedItem(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboServicioFiltro.ComboChangedItem
        cboSubServicio.LLenarCombo(sender)
    End Sub
    Private Sub cboDepartamento_ComboChangedItem(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboDepartamento.ComboChangedItem
        cboMunicipio.LLenarCombo(sender)
    End Sub
    Protected Sub btnSinRecibir_Click(sender As Object, e As EventArgs) Handles btnSinRecibir.Click
        Session("SinRecibir") = 1
        Session("SinEnviar") = ""
        Session("EnviadoSinRecibir") = ""
        Session("Empleado") = Master.Master.Usuario
        llenarGrid()

    End Sub
    Protected Sub btnSinEnviar_Click(sender As Object, e As EventArgs) Handles btnSinEnviar.Click
        Session("EnviadoSinRecibir") = ""
        Session("SinRecibir") = ""
        Session("SinEnviar") = 1
        Session("Empleado") = Master.Master.Usuario
        llenarGrid()

    End Sub
    Protected Sub btnEnviadoSinRecibir_Click(sender As Object, e As EventArgs) Handles btnEnviadoSinRecibir.Click
        Session("EnviadoSinRecibir") = 1
        Session("SinRecibir") = ""
        Session("SinEnviar") = ""
        Session("Empleado") = Master.Master.Usuario
        llenarGrid()

    End Sub
#End Region

#Region "Metodos"
    Public Sub Mensaje(ByVal sMensaje As String)
        Dim strScript As String = "<script language=JavaScript>"
        strScript += "alert(""" & sMensaje & """);"
        strScript += "</script>"
        If (Not ClientScript.IsStartupScriptRegistered("clientScript")) Then
            ClientScript.RegisterClientScriptBlock(Me.GetType(), "clientScript", strScript)
        End If
    End Sub
    Private Function dtParametrosExportar() As DataTable
        Try
            dtParametrosExportar = cFunciones.dtDatos.Clone
            'dtParametrosExportar.Rows.Add("Id", txtFecha.Text)
        Catch ex As Exception
            Throw (ex)
        End Try
    End Function
    Private Function dtParametrosBitacora(Optional ByVal bInactivo As Boolean = False) As DataTable
        Try
            dtParametrosBitacora = cFunciones.dtDatos.Clone
            dtParametrosBitacora.Rows.Add("NombreUsuario", Master.Master.Usuario)
            dtParametrosBitacora.Rows.Add("idModificacion", 2)
            dtParametrosBitacora.Rows.Add("idAccion", 1)
            dtParametrosBitacora.Rows.Add("Comentario", "Ingreso al Modulo de Expedientes")
            dtParametrosBitacora.Rows.Add("Justificacion", "No Necesaria")
        Catch ex As Exception
            Throw (ex)
        End Try
    End Function
    Private Sub llenarGrid()
        If GridView1.DataSource Is Nothing Then
            cFunciones.Ejecutar("pBitacora_Add", dtParametrosBitacora)
            GridView1.DataSource = cFunciones.Filldatatable(sNombreBusqueda, dtParametros)
            GridView1.DataBind()
        End If
    End Sub
    Private Function CargaTrabajo() As DataTable
        dtCargaTrabajo = cFunciones.Filldatatable(sNombreCargaTrabajo, dtParametrosCargaTrabajo, sMensaje)

        If dtCargaTrabajo.Rows(0).Item("TotalSinEnviar") > 0 Then
            btnSinEnviar.Enabled = True
            btnSinEnviar.Text = "Sin Enviar: " & dtCargaTrabajo.Rows(0).Item("TotalSinEnviar")
        Else
            btnSinEnviar.Enabled = False
            btnSinEnviar.Text = "Sin Enviar"
        End If

        If dtCargaTrabajo.Rows(0).Item("TotalSinRecibir") > 0 Then
            btnSinRecibir.Enabled = True
            btnSinRecibir.Text = "Sin Recibir: " & dtCargaTrabajo.Rows(0).Item("TotalSinRecibir")
        Else
            btnSinRecibir.Enabled = False
            btnSinRecibir.Text = "Sin Recibir"
        End If

        If dtCargaTrabajo.Rows(0).Item("TotalEnviadoSinRecibir") > 0 Then
            btnEnviadoSinRecibir.Enabled = True
            btnEnviadoSinRecibir.Text = "Enviado Sin Recibir: " & dtCargaTrabajo.Rows(0).Item("TotalEnviadoSinRecibir")
        Else
            btnEnviadoSinRecibir.Enabled = False
            btnEnviadoSinRecibir.Text = "Enviado Sin Recibir"
        End If

    End Function
    Private Function dtParametros() As DataTable
        Try
            dtParametros = cFunciones.dtDatos.Clone
            dtParametros.Rows.Add("Id", tbxExpediente.Text)
           
            
            dtParametros.Rows.Add(txtEncargado.FieldName, txtEncargado.Text)
            dtParametros.Rows.Add(txtSolicitante.FieldName, txtSolicitante.Text)
            dtParametros.Rows.Add(txtNumDictamen.FieldName, txtNumDictamen.Text)
            dtParametros.Rows.Add(txtNumResolucion.FieldName, txtNumResolucion.Text)
            If cboSubServicio.Value = Nothing Then
                dtParametros.Rows.Add(cboServicioFiltro.FieldName, cboServicioFiltro.Value)
            End If
            dtParametros.Rows.Add(cboSubServicio.FieldName, cboSubServicio.Value)
            dtParametros.Rows.Add(cboDepartamento.FieldName, cboDepartamento.Value)
            dtParametros.Rows.Add(cboMunicipio.FieldName, cboMunicipio.Value)
            dtParametros.Rows.Add(dtcFechaDesde.FieldName, dtcFechaDesde.Value)
            dtParametros.Rows.Add(dtcFechaHasta.FieldName, dtcFechaHasta.Value)
            dtParametros.Rows.Add(cboRecibido.FieldName, cboRecibido.Value)
            dtParametros.Rows.Add("SinRecibir", Session("SinRecibir"))
            dtParametros.Rows.Add("SinEnviar", Session("SinEnviar"))
            dtParametros.Rows.Add("idUsuario", Session("Empleado"))
            dtParametros.Rows.Add("EnviadoSinRecibir", Session("EnviadoSinRecibir"))
           
            'dtParametros.Rows.Add("idUsuario", Master.Master.Usuario)
        Catch ex As Exception
            'Throw (ex)
        End Try
    End Function
    Private Function dtParametros(ByVal id As String) As DataTable
        Try
            dtParametros = cFunciones.dtDatos.Clone
            dtParametros.Rows.Add("ID", id)
            'dtParametros.Rows.Add(txtFecha.FieldName, txtFecha.Text)
        Catch ex As Exception
            Throw (ex)
        End Try
    End Function
    Private Function dtParametrosCargaTrabajo() As DataTable
        Try
            dtParametrosCargaTrabajo = cFunciones.dtDatos.Clone
            dtParametrosCargaTrabajo.Rows.Add("idUsuario", Master.Master.Usuario)
        Catch ex As Exception
            Throw (ex)
        End Try
    End Function
#End Region

    
    
    
End Class