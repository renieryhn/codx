Imports prjDatos
Public Class wfmSeguimientoExpediente
    Inherits System.Web.UI.Page
#Region "Declaraciones"
    Dim cFunciones As New funciones
    Private sNombreBusqueda As String = "pDetalleExpediente_List"
    Private sNombreBorrado As String = "pDetalleExpediente_Delete"
    Private sNombreRecepcionExpediente As String = "pDetalleExpediente_Recibir"


    Dim sMensaje As String = ""
    Private Codigo As String = ""
    Dim dtDatos, dtCargaTrabajo As DataTable
    Dim ok As Boolean
    Public Event ComboChangedItem(ByVal sender As Object, ByVal e As EventArgs)
#End Region
#Region "Eventos"
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        AddHandler Master.PreRender, AddressOf Page_PreRender
        sMensaje = Session("Mensaje")
        
        If sMensaje <> "" Then
            Mensaje(sMensaje)
        End If
    End Sub
    Protected Sub PageChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs) Handles GridView1.PageIndexChanging
        GridView1.PageIndex = e.NewPageIndex
        llenarGrid()
    End Sub
    Protected Sub btnRecibir_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnRecibir.Click
        ok = cFunciones.Ejecutar(sNombreRecepcionExpediente, dtParametrosRecepcion(), sMensaje)
        Mensaje(sMensaje)
        If ok Then
            llenarGrid()
            btnRecibir.Enabled = False
        End If
    End Sub
    Protected Sub btnBuscar_Click(ByVal sender As Object, ByVal e As EventArgs)
        llenarGrid()
    End Sub
    Private Sub GridView1_RowDeleting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewDeleteEventArgs) Handles GridView1.RowDeleting
        Codigo = GridView1.Rows(e.RowIndex).Cells(3).Text
        Ok = cFunciones.Ejecutar(sNombreBorrado, dtParametros(Codigo), sMensaje)
        Mensaje(sMensaje)
        If Ok Then
            llenarGrid()
            btnRecibir.Enabled = False
        End If
    End Sub

    Protected Sub btnNuevo_Click(ByVal sender As Object, ByVal e As EventArgs)
        Response.Redirect(linkNuevo.NavigateUrl)
    End Sub
    Protected Sub btnExportar_Click(ByVal sender As Object, ByVal e As EventArgs)
        ' Master.Master.e(GridView1, dtParametrosExportar, "Mantenimiento de Usuarios")
    End Sub
    Private Sub Page_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.PreRender
        GridView1.Columns(0).Visible = Master.Master.Modificacion
        GridView1.Columns(1).Visible = Master.Master.Borrado
        If Master.idExpediente <> "" Then
            llenarGrid()
        End If
    End Sub

    Private Sub GridView1_RowEditing(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewEditEventArgs) Handles GridView1.RowEditing
        'Session("ID") = GridView1.Rows(e.NewEditIndex).Cells(2).Text
        Session("idDetalleExpediente") = GridView1.Rows(e.NewEditIndex).Cells(3).Text
        Response.Redirect(linkModificar.NavigateUrl)
    End Sub
#End Region
#Region "Metodos"
    Private Function bObtenerFechaRecepcion() As DataTable
        bObtenerFechaRecepcion = cFunciones.Filldatatable(sNombreBusqueda, dtParametrosFechaRecepcion, sMensaje)
        Session("Mensaje") = sMensaje
    End Function

    

    Private Sub llenarGrid()
        If Master.idExpediente <> "" Then
            GridView1.DataSource = cFunciones.Filldatatable(sNombreBusqueda, dtParametros)
            GridView1.DataBind()
            dtDatos = bObtenerFechaRecepcion()

            If dtDatos.Rows(0).Item("FechaRecepcion").ToString = "" And dtDatos.Rows(0).Item("RecibidoPor").ToString.ToLower = Master.Master.Usuario.ToLower Then
                btnRecibir.Enabled = True
                Session("idDetalle") = dtDatos.Rows(0).Item("id").ToString
                Session("idEstado") = dtDatos.Rows(0).Item("idEstado").ToString
            End If
        End If

    End Sub
    Private Function dtParametros() As DataTable
        Try
            dtParametros = cFunciones.dtDatos.Clone
            dtParametros.Rows.Add("idExpediente", Master.idExpediente)
            
        Catch ex As Exception
            Mensaje(ex.Message)
        End Try
    End Function
    Private Function dtParametrosFechaRecepcion() As DataTable
        Try
            dtParametrosFechaRecepcion = cFunciones.dtDatos.Clone
            dtParametrosFechaRecepcion.Rows.Add("idExpediente", Master.idExpediente)
            dtParametrosFechaRecepcion.Rows.Add("UltimoEstado", 1)
            'dtParametrosFechaRecepcion.Rows.Add("idUsuario", Master.Master.Usuario)
        Catch ex As Exception
            Mensaje(ex.Message)
        End Try
    End Function
    Private Function dtParametros(ByVal id As String) As DataTable
        Try
            dtParametros = cFunciones.dtDatos.Clone
            dtParametros.Rows.Add("ID", id)
            dtParametros.Rows.Add("idExpediente", Master.idExpediente)
            dtParametros.Rows.Add("idUsuario", Master.Master.Usuario)
        Catch ex As Exception
            Mensaje(ex.Message)
        End Try
    End Function
    Private Function dtParametrosRecepcion() As DataTable
        Try
            dtParametrosRecepcion = cFunciones.dtDatos.Clone
            dtParametrosRecepcion.Rows.Add("idExpediente", Master.idExpediente)
            dtParametrosRecepcion.Rows.Add("idEstado", Session("idEstado").ToString)
            dtParametrosRecepcion.Rows.Add("idDetalle", Session("idDetalle").ToString)
            dtParametrosRecepcion.Rows.Add("idUsuario", Master.Master.Usuario)
        Catch ex As Exception
            Mensaje(ex.Message)
        End Try
    End Function
    Private Function dtParametrosExportar() As DataTable
        Try
            dtParametrosExportar = cFunciones.dtDatos.Clone
            'dtParametrosExportar.Rows.Add("Nombre", txtNombre.Text)
            'dtParametrosExportar.Rows.Add("Rol", cbRol.Text)
            'dtParametrosExportar.Rows.Add("Ubicación", cbUbicacion.Text)
        Catch ex As Exception
            Throw (ex)
        End Try
    End Function
    Public Sub Mensaje(ByVal sMensaje As String)
        Dim strScript As String = "<script language=JavaScript>"
        strScript += "alert(""" & sMensaje & """);"
        strScript += "</script>"
        If (Not ClientScript.IsStartupScriptRegistered("clientScript")) Then
            ClientScript.RegisterClientScriptBlock(Me.GetType(), "clientScript", strScript)
        End If
    End Sub
#End Region

    
End Class